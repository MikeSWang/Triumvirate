name: continuous-delivery

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+.post[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+rc[0-9]+'
    paths:
      - deploy/pkg/conda_recipe/**
      - .github/workflows/cd.yml
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_sdist:
    name: Build sdist tarball

    runs-on: ubuntu-latest

    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install packaging requirements
        run: python -m pip install --upgrade build twine

      - name: Build source distribution
        run: python -m build --sdist --outdir dist/ .

      - name: Verify source distribution
        run: python -m twine check --strict dist/*

      - name: Save tarball to sdist
        uses: actions/upload-artifact@v3
        with:
          name: sdist_tar_${{ github.ref_name }}
          path: dist/*.tar.gz

      - name: Save tarball to pypi_dist
        uses: actions/upload-artifact@v3
        with:
          name: pypi_dist_${{ github.ref_name }}
          path: dist/*.tar.gz

  build_bdist:
    name: Build bdist wheel

    strategy:
      fail-fast: false
      matrix:
        # Use oldest supported OS for backward compatibility.
        os: [ubuntu-20.04, macos-11]

    runs-on: ${{ matrix.os }}

    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install packaging requirements
        run: python -m pip install --upgrade twine

      - name: Build built distribution
        uses: pypa/cibuildwheel@v2.12.1
        with:
          package-dir: .
          output-dir: dist/
          config-file: pyproject.toml
        env:
          # Default to GCC compiler and OpenMP on macOS.
          CIBW_ENVIRONMENT_MACOS: >-
            PY_CXX=$(brew --prefix gcc)/bin/g++-12
            PY_CXXFLAGS=-I$(brew --prefix)/include
            PY_LDFLAGS=-L$(brew --prefix)/lib

      - name: Verify built distribution
        uses: knicknic/os-specific-run@v1.0.3
        with:
          # BUG: ``twine check`` fails to recognise ``--strict`` on macOS.
          linux: python -m twine check --strict dist/*
          macos: python -m twine check dist/*

      - name: Save wheel to bdist
        uses: actions/upload-artifact@v3
        with:
          name: bdist_wheel_${{ github.ref_name }}
          path: dist/*.whl

      - name: Save wheel to pypi_dist
        uses: actions/upload-artifact@v3
        with:
          name: pypi_dist_${{ github.ref_name }}
          path: dist/*.whl

  build_conda:
    name: Build conda package

    strategy:
      fail-fast: false
      matrix:
        # Use oldest supported OS for backward compatibility.
        os: [ubuntu-20.04, macos-11]

    runs-on: ${{ matrix.os }}

    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up (Mini)conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: conda_bld
          channels: conda-forge
          channel-priority: strict

      - name: Install packaging requirements
        run: conda install -y conda-build

      - name: Build conda package
        env:
          recipe_dir: deploy/pkg/conda_recipe
          output_dir: dist/
          variants: "{'python': ['3.8', '3.9', '3.10']}"
        run: |
          # Create output directory if non-existent.
          if [[ ! -d ${output_dir} ]]; then mkdir -p ${output_dir}; fi
          # Default to GCC compiler and OpenMP on macOS.
          if [[ "$RUNNER_OS" == macOS ]]; then
            CXX_DIR=$(brew --prefix gcc)/bin
            CXX_BIN=$(ls ${CXX_DIR} | grep '^g++')
            export PY_CXX=${CXX_DIR}/${CXX_BIN}
          fi
          # Build.
          conda build --strict-verify --no-anaconda-upload ${recipe_dir} \
            --variants "${variants}" --output-folder ${output_dir}

      - name: Save build to conda_bld
        uses: actions/upload-artifact@v3
        with:
          name: conda_bld_${{ github.ref_name }}
          path: dist/*

      - name: Save build to conda_dist
        uses: actions/upload-artifact@v3
        with:
          name: conda_dist_${{ github.ref_name }}
          path: dist/**/*.tar.bz2
