name: continuous-delivery-arm64

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+.post[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+rc[0-9]+'
    paths:
      - deploy/pkg/conda_recipe_arm64/**
      - .github/workflows/cd_arm64.yml
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_bdist_arm64:
    name: Build bdist wheel (arm64)

    strategy:
      fail-fast: false
      matrix:
        # Use oldest supported OS for backward compatibility.
        os: [ubuntu-20.04, macos-11]
        # Skip non-arm64 macOS runner (as cross compilation is not working).
        exclude:
          - os: macos-11

    runs-on: ${{ matrix.os }}

    timeout-minutes: 180

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Use QEMU for non-arm64 Linux runner.
      - name: Set up QEMU (Linux)
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          # Specify arm64 architecture.
          platforms: linux/arm64

      - name: Install packaging requirements
        run: python -m pip install --upgrade twine

      - name: Build built distribution
        uses: pypa/cibuildwheel@v2.12.1
        with:
          package-dir: .
          output-dir: dist_arm64/
          config-file: pyproject.toml
        env:
          # Optional: Specify arm64 architecture (as non-native).
          CIBW_ARCHS_LINUX: aarch64
          CIBW_ARCHS_MACOS: arm64
          # Default to LLVM compiler and OpenMP on macOS.
          CIBW_ENVIRONMENT_MACOS: >-
            PY_CXX=$(brew --prefix llvm)/bin/clang++
            PY_CXXFLAGS="-I$(brew --prefix)/include"
            PY_LDFLAGS="-L$(brew --prefix)/lib"
            PY_CXXFLAGS_OMP="-Xpreprocessor -fopenmp"
            PY_LDFLAGS_OMP="-L$(brew --prefix libomp)/lib -lomp"

      - name: Verify built distribution
        uses: knicknic/os-specific-run@v1.0.3
        with:
          # BUG: ``twine check`` fails to recognise ``--strict`` on macOS.
          linux: python -m twine check --strict dist_arm64/*
          macos: python -m twine check dist_arm64/*

      - name: Save wheel to bdist
        uses: actions/upload-artifact@v3
        with:
          name: bdist_wheel_arm64_${{ github.ref_name }}
          path: dist_arm64/*.whl

      - name: Save wheel to pypi_dist
        uses: actions/upload-artifact@v3
        with:
          name: pypi_dist_arm64_${{ github.ref_name }}
          path: dist_arm64/*.whl

  build_conda_arm64:
    name: Build conda package (arm64)

    # Skip as no native arm64 runner exists.
    if: false

    strategy:
      fail-fast: false
      matrix:
        # Use oldest supported OS for backward compatibility.
        os: [ubuntu-20.04, macos-11]

    runs-on: ${{ matrix.os }}

    timeout-minutes: 180

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up (Mini)conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: conda_bld
          channels: conda-forge
          channel-priority: strict
          # Specify arm64 architecture.
          architecture: ARM64

      - name: Install packaging requirements
        run: conda install -y conda-build

      - name: Build conda package
        env:
          recipe_dir: deploy/pkg/conda_recipe_arm64
          output_dir: dist_arm64/
          variants: "{'python': ['3.8', '3.9', '3.10']}"
        run: |
          # Create output directory if non-existent.
          if [[ ! -d ${output_dir} ]]; then mkdir -p ${output_dir}; fi
          # Build.
          conda build --strict-verify --no-anaconda-upload ${recipe_dir} \
            --variants "${variants}" --output-folder ${output_dir}

      - name: Save build to conda_bld
        uses: actions/upload-artifact@v3
        with:
          name: conda_bld_arm64_${{ github.ref_name }}
          path: dist_arm64/*

      - name: Save build to conda_dist
        uses: actions/upload-artifact@v3
        with:
          name: conda_dist_arm64_${{ github.ref_name }}
          path: dist_arm64/**/*.tar.bz2
