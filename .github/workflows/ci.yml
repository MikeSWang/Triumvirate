name: ci

on:
  push:
    branches:
      - main
      - "v[0-9]+"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+rc[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+a[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+b[0-9]+"
    paths:
      - src/**
      - tests/**
      - setup.py
      - setup.cfg
      - pyproject.toml
      - MANIFEST.in
      - Makefile
      - .github/workflows/ci.yml

jobs:
  build-test-dev:
    name: Build and test in development mode

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python build system requirements
        run: python -m pip install --upgrade pip setuptools cython

      - name: Install C++ build required dependencies
        uses: knicknic/os-specific-run@v1.0.3
        with:
          linux: |
            sudo apt-get update
            sudo apt-get install -y libgsl-dev libfftw3-dev libgomp1
          macos: |
            brew update
            brew install gsl fftw libomp

      - name: Build and install
        run: |
          # Specify GNU C++ compiler on macOS.
          if [ "${RUNNER_OS}" == macOS ]; then
            CXX_DIR=$(brew --prefix gcc)/bin
            CXX_BIN=$(ls ${CXX_DIR} | grep '^g++')
            export CXX=${CXX_DIR}/${CXX_BIN}
          fi
          make clean; make -j install useomp=true

      - name: Install Python test required dependencies
        run: python -m pip install pytest

      - name: Test
        run: pytest

  lint:
    name: Lint code

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python linting dependencies
        run: python -m pip install flake8

      - name: Lint
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --statistics
